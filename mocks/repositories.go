// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/waypoint/waypoint/repositories (interfaces: RouteTaskRepository)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/waypoint/waypoint/models"
	reflect "reflect"
)

// MockRouteTaskRepository is a mock of RouteTaskRepository interface
type MockRouteTaskRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRouteTaskRepositoryMockRecorder
}

// MockRouteTaskRepositoryMockRecorder is the mock recorder for MockRouteTaskRepository
type MockRouteTaskRepositoryMockRecorder struct {
	mock *MockRouteTaskRepository
}

// NewMockRouteTaskRepository creates a new mock instance
func NewMockRouteTaskRepository(ctrl *gomock.Controller) *MockRouteTaskRepository {
	mock := &MockRouteTaskRepository{ctrl: ctrl}
	mock.recorder = &MockRouteTaskRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockRouteTaskRepository) EXPECT() *MockRouteTaskRepositoryMockRecorder {
	return _m.recorder
}

// Get mocks base method
func (_m *MockRouteTaskRepository) Get(_param0 string) (models.Model, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(models.Model)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (_mr *MockRouteTaskRepositoryMockRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Get", reflect.TypeOf((*MockRouteTaskRepository)(nil).Get), arg0)
}

// Set mocks base method
func (_m *MockRouteTaskRepository) Set(_param0 *models.RouteTask) error {
	ret := _m.ctrl.Call(_m, "Set", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set
func (_mr *MockRouteTaskRepositoryMockRecorder) Set(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Set", reflect.TypeOf((*MockRouteTaskRepository)(nil).Set), arg0)
}
